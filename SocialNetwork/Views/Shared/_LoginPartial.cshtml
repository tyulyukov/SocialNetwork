@using Microsoft.AspNetCore.Identity
@inject SignInManager<SocialNetwork.Data.Entities.Profile> SignInManager
@inject UserManager<SocialNetwork.Data.Entities.Profile> UserManager

<ul class="order-1 order-md-3 navbar-nav navbar-no-expand ml-auto ">
    @if (SignInManager.IsSignedIn(User))
    {
    <li class="nav-item dropdown">
        <button type="button" class="btn dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
            <img style="width: 25px; height: 25px;" src="@UserManager.GetUserAsync(User).GetAwaiter().GetResult().AvatarImageUrl" />
            @User.Identity.Name
        </button>

        <div class="dropdown-menu">
            <a class="dropdown-item" asp-action="Index" asp-controller="MyProfile" title="Manage">My profile</a>
            <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Settings</a>
            <div class="dropdown-divider"></div>
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" id="logout" class="dropdown-item">Logout</button>
            </form>
        </div>
    </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>

@section Scripts {
    <script>
        var tokenKey = "accessToken";

        document.getElementById("logout").addEventListener("click", e => {
            //sessionStorage.removeItem(tokenKey);
        });
    </script>
}
