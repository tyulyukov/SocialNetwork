@model SocialNetwork.Data.Entities.Profile
@{
    ViewData["Title"] = $"{Model.FullName} ({Model.UserName})";
}

<div class="container">
    <div class="profile-page tx-13">
        <div class="row">
            <div class="col-12 grid-margin">
                <div class="profile-header">
                    <div class="cover">
                        <div class="gray-shade"></div>
                        <figure>
                            <img src="https://www.shutterstock.com/blog/wp-content/uploads/sites/5/2020/02/Usign-Gradients-Featured-Image.jpg" style="height:300px" class="img-fluid" alt="profile cover">
                        </figure>
                        <div class="cover-body d-flex justify-content-between align-items-center">
                            <div>
                                <img class="profile-pic" src="@Model.AvatarImageUrl" alt="profile">
                                <span class="profile-name">@Model.FullName <span class="tx-11 text-muted">@@@Model.UserName</span></span>
                            </div>
                            <div class="d-none d-md-block">
                                @if (!ViewBag.IsFollowing)
                                {
                                    <button onclick="subscribe(this, '@Model.Id')" class="btn btn-primary mt-2 btn-icon-text btn-edit-profile">
                                        <i class="fa-solid fa-bell feather feather-columns mr-1 icon-md"></i>
                                        Follow
                                    </button>
                                }
                                else
                                {
                                    <button onclick="unsubscribe(this, '@Model.Id')" class="btn btn-outline-primary mt-2 btn-icon-text btn-edit-profile">
                                        <i class="fa-solid fa-bell-slash feather feather-columns mr-1 icon-md"></i>
                                        Unfollow
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="header-links">
                        <ul class="links d-flex align-items-center mt-3 mt-md-0">
                            <li class="header-link-item d-flex align-items-center active">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-columns mr-1 icon-md">
                                    <path d="M12 3h7a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-7m0-18H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7m0-18v18"></path>
                                </svg>
                                <a class="pt-1px d-none d-md-block" href="#">Feed</a>
                            </li>
                            <li class="header-link-item ml-3 pl-3 border-left d-flex align-items-center">
                                <i class="fas fa-image feather feather-columns mr-1 icon-md"></i>
                                <a class="pt-1px d-none d-md-block" href="#">Photos</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="row profile-body">
            <!-- left wrapper start -->
            <div class="d-none d-md-block col-md-4 col-xl-3 left-wrapper">
                <div class="card rounded">
                    <div class="card-body">
                        @if (!String.IsNullOrWhiteSpace(Model.Description))
                        {
                            <div class="d-flex align-items-center justify-content-between mb-2">
                                <h6 class="card-title mb-0">About</h6>
                            </div>
                            <p>@Model.Description</p>
                        }
                        <div class="mt-3">
                            <label class="tx-11 font-weight-bold mb-0 text-uppercase">Followers:</label>
                            @if (Model.Followers != null)
                            {
                                <p id="followers-count" class="text-muted">@Model.Followers.Count</p>
                            }
                            else
                            {
                                <p class="text-muted">0</p>
                            }
                        </div>
                        <div class="mt-3">
                            <label class="tx-11 font-weight-bold mb-0 text-uppercase">Following:</label>
                            @if (Model.Following != null)
                            {
                                <p class="text-muted">@Model.Following.Count</p>
                            }
                            else
                            {
                                <p class="text-muted">0</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <!-- left wrapper end -->
            <!-- middle wrapper start -->
            <div class="col-md-8 col-xl-6 middle-wrapper">
                <div class="row">
                    @foreach (var post in ViewBag.Posts)
                    {
                        <div class="col-md-12">
                            <div class="card rounded">
                                <div class="card-header">
                                    <div class="d-flex align-items-center justify-content-between">
                                        <div class="d-flex align-items-center">
                                            <img class="img-xs rounded-circle" src="@post.Author.AvatarImageUrl" alt="">
                                            <div class="ml-2">
                                                <span>
                                                    @post.Author.FullName 
                                                    @if (post.CreatedAt.ToShortDateString() == DateTime.Now.ToShortDateString())
                                                    {
                                                        <span class="tx-11 text-muted">
                                                            @post.CreatedAt.ToShortTimeString()
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span class="tx-11 text-muted">
                                                            @post.CreatedAt.ToShortDateString()
                                                        </span>
                                                    }
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <span class="mb-3 tx-14">@post.Text</span>
                                </div>
                                @if (post.Attachments != null && post.Attachments.Count != 0)
                                {
                                    <div class="card-body">
                                        @foreach (var image in post.Attachments)
                                        {
                                            <img class="mb-3 tx-14" src="@image.Url" style="max-width: 200px; max-height: 200px; border-radius: 2px;"/>
                                        }
                                    </div>
                                }
                                <div class="card-footer">
                                    <div class="d-flex post-actions">
                                        @if (ViewBag.LikedPosts.Contains(post))
                                        {
                                            <a href="javascript:;" id="like-@post.Id" class="d-flex align-items-center text-muted mr-4 unlike-button">
                                                <i id="like-heart-@post.Id" class="fa-solid fa-heart feather feather-columns mr-1 icon-md"></i>
                                                <span id="like-text-@post.Id" style="color: red" class="d-none d-md-block ml-2">Like (<span id="like-number-@post.Id">@post.Likes.Count</span>)</span>
                                            </a>
                                        }
                                        else
                                        {
                                            <a href="javascript:;" id="like-@post.Id" class="d-flex align-items-center text-muted mr-4 like-button">
                                                <i id="like-heart-@post.Id" class="fa-regular fa-heart feather feather-columns mr-1 icon-md"></i>
                                                <span id="like-text-@post.Id" class="d-none d-md-block ml-2">Like (<span id="like-number-@post.Id">@post.Likes.Count</span>)</span>
                                            </a>
                                        }
                                            
                                        <a asp-action="Index" asp-controller="Posts" asp-route-id="@post.Id" id="@post.Id" class="d-flex align-items-center text-muted mr-4">
                                            <i class="fa-regular fa-comment feather feather-columns mr-1 icon-md"></i>
                                            <span class="d-none d-md-block ml-2">Comment (@post.Comments.Count)</span>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
<script>
    let likeButtons = document.getElementsByClassName("like-button");
    let unlikeButtons = document.getElementsByClassName("unlike-button");
    let followersCount = document.getElementById("followers-count");

    for (let button of likeButtons)
    {
        button.onclick = function() { like(button, button.id.replace("like-", "")); };
    }

    for (let button of unlikeButtons) 
    {
        button.onclick = function() { unlike(button, button.id.replace("like-", "")); };
    }

    function like(button, id)
    {
        button.onclick = null;

        fetch (window.location.origin + "/api/Like/" + id, {
                method: 'POST',
            })
            .then(res => { 
                return res; 
            })
            .then(data => { 
                if (data.status != 200)
                    return;

                let likeText = document.getElementById("like-text-" + id);
                let likeNumberText = document.getElementById("like-number-" + id);
                let likeHeart = document.getElementById("like-heart-" + id);

                likeHeart.classList.replace("fa-regular", "fa-solid");
                likeText.style.color = "red";
                likeNumberText.innerHTML = parseInt(likeNumberText.innerHTML) + 1;

                button.onclick = function() { unlike(button, id); };

            })
            .catch(err => console.error(err));
    }

    function unlike(button, id)
    {
        button.onclick = null;

        fetch (window.location.origin + "/api/Like/" + id, {
                method: 'DELETE',
            })
            .then(res => { 
                return res; 
            })
            .then(data => { 
                let likeText = document.getElementById("like-text-" + id);
                let likeNumberText = document.getElementById("like-number-" + id);
                let likeHeart = document.getElementById("like-heart-" + id);

                likeHeart.classList.replace("fa-solid", "fa-regular");
                likeText.style.color = "";
                likeNumberText.innerHTML = parseInt(likeNumberText.innerHTML) - 1;

                button.onclick = function() { like(button, id); };
            })
            .catch(err => console.error(err));
    }

    function subscribe(button, id)
    {
        button.onclick = null;

        fetch (window.location.origin + "/api/Follow/" + id, {
                method: 'POST',
            })
            .then(res => { 
                return res; 
            })
            .then(data => { 
                if (data.status != 200)
                    return;

                followersCount.innerHTML = parseInt(followersCount.innerHTML) + 1;
                button.innerHTML = '<i class="fa-solid fa-bell-slash feather feather-columns mr-1 icon-md"></i>Unfollow';
                button.classList.replace("btn-primary", "btn-outline-primary");
                button.onclick = function() { unsubscribe(button, id); };
            })
            .catch(err => console.error(err));
    }

    function unsubscribe(button, id)
    {
        button.onclick = null;

        fetch (window.location.origin + "/api/Follow/" + id, {
                method: 'DELETE',
            })
            .then(res => { 
                return res; 
            })
            .then(data => { 
                if (data.status != 200)
                    return;

                followersCount.innerHTML = parseInt(followersCount.innerHTML) - 1;
                button.innerHTML = '<i class="fa-solid fa-bell feather feather-columns mr-1 icon-md"></i>Follow';
                button.classList.replace("btn-outline-primary", "btn-primary");
                button.onclick = function() { subscribe(button, id); };
            })
            .catch(err => console.error(err));
    }
</script>

<style>
    body {
        background-color: #f9fafb;
        margin-top: 20px;
    }

    .profile-page .profile-header {
        box-shadow: 0 0 10px 0 rgba(183, 192, 206, 0.2);
        border: 1px solid #f2f4f9;
    }

    .profile-page .profile-header .cover {
        position: relative;
        border-radius: .25rem .25rem 0 0;
    }


    .profile-page .profile-header .cover figure {
        margin-bottom: 0;
    }

    @@media (max-width: 767px) {
        .profile-page .profile-header .cover figure {
            height: 110px;
            overflow: hidden;
        }
    }

    @@media (min-width: 2400px) {
        .profile-page .profile-header .cover figure {
            height: 280px;
            overflow: hidden;
        }
    }

    .profile-page .profile-header .cover figure img {
        border-radius: .25rem .25rem 0 0;
        width: 100%;
    }

    @@media (max-width: 767px) {
        .profile-page .profile-header .cover figure img {
            -webkit-transform: scale(2);
            transform: scale(2);
            margin-top: 15px;
        }
    }

    @@media (min-width: 2400px) {
        .profile-page .profile-header .cover figure img {
            margin-top: -55px;
        }
    }

    .profile-page .profile-header .cover .gray-shade {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1;
        background: linear-gradient(rgba(255, 255, 255, 0.1), #fff 99%);
    }

    .profile-page .profile-header .cover .cover-body {
        position: absolute;
        bottom: -20px;
        left: 0;
        z-index: 2;
        width: 100%;
        padding: 0 20px;
    }

    .profile-page .profile-header .cover .cover-body .profile-pic {
        border-radius: 50%;
        width: 100px;
    }

    @@media (max-width: 767px) {
        .profile-page .profile-header .cover .cover-body .profile-pic {
            width: 70px;
        }
    }

    .profile-page .profile-header .cover .cover-body .profile-name {
        font-size: 20px;
        font-weight: 600;
        margin-left: 17px;
    }

    .profile-page .profile-header .header-links {
        padding: 15px;
        display: -webkit-flex;
        display: flex;
        -webkit-justify-content: center;
        justify-content: center;
        background: #fff;
        border-radius: 0 0 .25rem .25rem;
    }

    .profile-page .profile-header .header-links ul {
        list-style-type: none;
        margin: 0;
        padding: 0;
    }

    .profile-page .profile-header .header-links ul li a {
        color: #000;
        -webkit-transition: all .2s ease;
        transition: all .2s ease;
    }

    .profile-page .profile-header .header-links ul li:hover,
    .profile-page .profile-header .header-links ul li.active {
        color: #727cf5;
    }

    .profile-page .profile-header .header-links ul li:hover a,
    .profile-page .profile-header .header-links ul li.active a {
        color: #727cf5;
    }

    .profile-page .profile-body .left-wrapper .social-links a {
        width: 30px;
        height: 30px;
    }

    .profile-page .profile-body .right-wrapper .latest-photos > .row {
        margin-right: 0;
        margin-left: 0;
    }

    .profile-page .profile-body .right-wrapper .latest-photos > .row > div {
        padding-left: 3px;
        padding-right: 3px;
    }

    .profile-page .profile-body .right-wrapper .latest-photos > .row > div figure {
        -webkit-transition: all .3s ease-in-out;
        transition: all .3s ease-in-out;
        margin-bottom: 6px;
    }

    .profile-page .profile-body .right-wrapper .latest-photos > .row > div figure:hover {
        -webkit-transform: scale(1.06);
        transform: scale(1.06);
    }

    .profile-page .profile-body .right-wrapper .latest-photos > .row > div figure img {
        border-radius: .25rem;
    }

    .rtl .profile-page .profile-header .cover .cover-body .profile-name {
        margin-left: 0;
        margin-right: 17px;
    }

    .img-xs {
        width: 37px;
        height: 37px;
    }

    .rounded-circle {
        border-radius: 50% !important;
    }

    img {
        vertical-align: middle;
        border-style: none;
    }

    .card-header:first-child {
        border-radius: 0 0 0 0;
    }

    .card-header {
        padding: 0.875rem 1.5rem;
        margin-bottom: 0;
        background-color: rgba(0, 0, 0, 0);
        border-bottom: 1px solid #f2f4f9;
    }

    .card-footer:last-child {
        border-radius: 0 0 0 0;
    }

    .card-footer {
        padding: 0.875rem 1.5rem;
        background-color: rgba(0, 0, 0, 0);
        border-top: 1px solid #f2f4f9;
    }

    .grid-margin {
        margin-bottom: 1rem;
    }

    .card {
        box-shadow: 0 0 10px 0 rgba(183, 192, 206, 0.2);
        -webkit-box-shadow: 0 0 10px 0 rgba(183, 192, 206, 0.2);
        -moz-box-shadow: 0 0 10px 0 rgba(183, 192, 206, 0.2);
        -ms-box-shadow: 0 0 10px 0 rgba(183, 192, 206, 0.2);
    }

    .rounded {
        border-radius: 0.25rem !important;
    }

    .card {
        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 1px solid #f2f4f9;
        border-radius: 0.25rem;
    }
</style>
